name: outputs_demo

on:
  workflow_dispatch:
  issues:
    types:
      - opened

jobs:
  notify-for-issue:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Something happened with an issue"
      
  job1:
    runs-on: ubuntu-latest
    
    env:
      CACHE_NAME: outputs_demo
      OPERATION_TYPE: build # Indicator of the operation type

    steps:
      - name: Set Current Date
        id: date
        run: echo "CACHE_DATE=$(date + '%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Cache outputs_demo
        if: env.OPERATION_TYPE == 'build'
        uses: actions/cache@v3
        with:
          path: outputs_demo
          key: ${{ runner.os }}-${{ env.CACHE_NAME}}-${{ steps.date.outputs.CACHE_DATE }}-${{ hashFiles('src/**/*.py') }} # Unique cache key
          restore-keys: |
            ${{ runner.os }}-${{ env.CACHE_NAME }}-${{ steps.date.outputs.CACHE_DATE }}- # Resotre uning partial keys if exact match is not found

      - id: step1
        run: |
          echo "output1=hello" >> $GITHUB_ENV
          
      - id: step2
        run: |
          echo "output2=world" >> $GITHUB_ENV
      
      - id: step3
        run: |
          tagvar=test12345
          echo "output3=$tagvar" >> $GITHUB_ENV
      
      - name: Checkout branch
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      
      - name: Run python script
        id: python_script
        run: |
          python src/main.py
          contents=$(cat hello.txt)
          echo "output4=$contents" >> $GITHUB_ENV
      
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.14.0

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact  # This is the name youâ€™re uploading
          path: hello.txt  # Specify the correct file to upload
            
    outputs:
      output1: ${{ env.output1 }}
      output2: ${{ env.output2 }}
      output3: ${{ env.output3 }}
      output4: ${{ env.output4 }}
      changelog: ${{ steps.changelog.outputs.changelog }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}
    
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: |
          echo "Output1: ${{ needs.job1.outputs.output1 }}"
          echo "Output2: ${{ needs.job1.outputs.output2 }}"
          echo "Tagname: ${{ needs.job1.outputs.output3 }}"
          echo "Contents: ${{ needs.job1.outputs.output4 }}"
          echo "Changelog: ${{ needs.job1.outputs.changelog }}"
          echo "Clean Changelog: ${{ needs.job1.outputs.clean_changelog }}"
          echo "Version: ${{ needs.job1.outputs.version }}"

  job3:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact  # Matches the name used during upload

      - name: Use the Artifact
        run: |
          cat hello.txt  # Displaying the content of the downloaded artifact
